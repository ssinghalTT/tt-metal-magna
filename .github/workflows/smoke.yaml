name: "zzz Smoke tests"

on:
  workflow_call:
    inputs:
      docker-image:
        required: true
        type: string
      package-artifact-name:
        required: true
        type: string
      runner:
        required: true
        type: string
      per-test-timeout:
        required: false
        type: string
        default: 3.5

jobs:
  metalium-smoke:
    runs-on: >-
      ${{
        github.event.pull_request.head.repo.fork == true && format('tt-beta-ubuntu-2204-{0}-large-stable', inputs.runner-label)
        || fromJSON(format('["{0}", "in-service", "cloud-virtual-machine"]', inputs.runner))
      }}
    container:
      image: ${{ inputs.docker-image || 'docker-image-unresolved!'}}
      env:
        ASAN_OPTIONS: "color=always"
        TSAN_OPTIONS: "color=always"
        UBSAN_OPTIONS: "color=always:print_stacktrace=1:halt_on_error=1"
      volumes:
        - /work
        - /dev/hugepages-1G:/dev/hugepages-1G
      options: --device /dev/tenstorrent
    defaults:
      run:
        shell: bash
        working-directory: /work # https://github.com/actions/runner/issues/878
    steps:
      - uses: actions/download-artifact@v4
        timeout-minutes: 10
        with:
          name: ${{ inputs.package-artifact-name || 'packages artifact unresolved!' }}
          path: /work/pkgs/

      - name: Install packages
        run: |
          apt install ./pkgs/tt-metalium_*.deb ./pkgs/tt-metalium-jit_*.deb ./pkgs/tt-metalium-validation_*.deb

      - name: Run a test
        id: test
        timeout-minutes: 15
        env:
          GTEST_COLOR: yes
          GTEST_OUTPUT: xml:/work/test-reports/
          TT_METAL_HOME: /usr/libexec/tt-metalium # TODO: Need to get away from env vars!
          TT_METAL_WATCHER: 5
          TT_METAL_WATCHER_TEST_MODE: 1
        run: |
          /usr/libexec/tt-metalium/validation/tt-metalium-validation-smoke

      - name: workaround
        run: |
          # The test-reporting action runs git ls-files with no way to opt-out.
          # Give it a dummy repo so it doesn't fail.
          git init
      - name: Test Report
        # Because of https://github.com/tenstorrent/tt-metal/issues/19413, only run for our repo
        # for now. No forks!
        if: ${{ !cancelled() && (github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == false) }}
        uses: phoenix-actions/test-reporting@f957cd93fc2d848d556fa0d03c57bc79127b6b5e # v15
        with:
          name: Metalium ${{ matrix.platform }} smoke tests
          path: /work/test-reports/*.xml
          reporter: jest-junit
          working-directory: /work

      - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
        if: ${{ !cancelled() }}
        timeout-minutes: 10
        with:
          path: /work/test-reports/
          prefix: "test_reports_"

      # Arbitrary limit that's higher than we would like, but the JIT build seems inconsistent.
      # Keep it here as a guardrail to keep Smoke tests fast.  We can adjust as needed.
      - name: Check for slow tests
        shell: python3 {0}
        run: |
          import os
          import xml.etree.ElementTree as ET
          import sys

          # Find all XML files in the /work/test-reports directory
          report_files = [os.path.join(root, file) for root, dirs, files in os.walk("/work/test-reports/") for file in files if file.endswith(".xml")]
          if not report_files:
              print("No test reports found.")
              sys.exit(1)

          slow_tests = []

          for report_file in report_files:
              try:
                  tree = ET.parse(report_file)
                  root = tree.getroot()
                  for tc in root.findall(".//testcase"):
                      time = float(tc.get("time", 0))
                      if time > float(${{ inputs.per-test-timeout }}):
                          slow_tests.append(f"{report_file}: {tc.get('classname', 'Unknown')}.{tc.get('name', 'Unknown')} ({time:.3f}s)")
              except Exception as e:
                  print(f"Error parsing {report_file}: {e}")
                  sys.exit(2)

          if slow_tests:
              print("Some tests exceeded float(${{ inputs.per-test-timeout }})s:\n" + "\n".join(slow_tests))
              sys.exit(3)
