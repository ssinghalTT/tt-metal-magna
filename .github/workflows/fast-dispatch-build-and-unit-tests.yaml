name: "[internal] Fast dispatch unit tests impl"

on:
  workflow_call:
    inputs:
      arch:
        required: true
        type: string
      runner-label:
        required: true
        type: string
      timeout:
        required: false
        type: number
        default: 45
      os:
        required: false
        type: string
        default: "ubuntu-20.04"
  workflow_dispatch:
    inputs:
      arch:
        required: true
        type: choice
        options:
          - wormhole_b0
          - blackhole
      runner-label:
        required: true
        type: choice
        options:
          - E150
          - N150
          - N300
          - BH
      timeout:
        required: false
        type: number
        default: 45
      os:
        required: false
        type: string
        default: "ubuntu-20.04"

jobs:
  fd-tests:
    strategy:
      # Do not fail-fast because we need to ensure all tests go to completion
      # so we try not to get hanging machines
      fail-fast: false
      matrix:
        os: ["${{ inputs.os }}"]
        test-group: [
          {name: eager unit tests 1, cmd: pytest tests/tt_eager/python_api_testing/unit_testing/ -xvvv --splits 7 --group 1 },
          {name: eager unit tests 2, cmd: pytest tests/tt_eager/python_api_testing/unit_testing/ -xvvv --splits 7 --group 2 },
          {name: eager unit tests 3, cmd: pytest tests/tt_eager/python_api_testing/unit_testing/ -xvvv --splits 7 --group 3 },
          {name: eager unit tests 4, cmd: pytest tests/tt_eager/python_api_testing/unit_testing/ -xvvv --splits 7 --group 4 },
          {name: eager unit tests 5, cmd: pytest tests/tt_eager/python_api_testing/unit_testing/ -xvvv --splits 7 --group 5 },
          {name: eager unit tests 6, cmd: pytest tests/tt_eager/python_api_testing/unit_testing/ -xvvv --splits 7 --group 6 },
          {name: eager unit tests 7, cmd: pytest tests/tt_eager/python_api_testing/unit_testing/ -xvvv --splits 7 --group 7 },
          {name: sweep, cmd: pytest tests/tt_eager/python_api_testing/sweep_tests/pytests/ -xvvv },
        ]
    name: ${{ matrix.test-group.name }} ${{ inputs.arch }} ${{ inputs.runner-label }}
    env:
      LOGURU_LEVEL: INFO
    runs-on:
      - ${{ inputs.runner-label }}
      - cloud-virtual-machine
      - in-service
    steps:
      - uses: tenstorrent/tt-metal/.github/actions/checkout-with-submodule-lfs@main
      - uses: actions/download-artifact@v4
        timeout-minutes: 10
        with:
          name: eager-dist-${{ matrix.os }}-any
      - name: ${{ matrix.test-group.name }} tests
        timeout-minutes: ${{ inputs.timeout }}
        uses: ./.github/actions/docker-run
        with:
          docker_os_arch: tt-metalium/${{ inputs.os }}-dev-amd64
          install_wheel: true
          docker_password: ${{ secrets.GITHUB_TOKEN }}
          docker_opts: |
            -e ARCH_NAME=${{ inputs.arch }}
            -e GITHUB_ACTIONS=true
          run_args: |
            ${{ matrix.test-group.cmd }}
      - uses: ./.github/actions/slack-report
        if: ${{ failure() }}
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          owner: U06CXU895AP # Michael Chiou
      - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
        timeout-minutes: 10
        if: ${{ !cancelled() }}
        with:
          path: |
            generated/test_reports/
          prefix: "test_reports_"
      - name: Generate system logs on failure
        uses: ./.github/actions/generate-system-logs
        if: ${{ failure() }}
