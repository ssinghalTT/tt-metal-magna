name: "(Blackhole) Blackhole nightly tests"

on:
  workflow_dispatch:
    inputs:
      runner-label:
          description: 'Optional: BH'
          required: true
          type: string
          default: 'BH'
      run-ttnn-tests:
          description: "Run ttnn test suite"
          default: false
          type: boolean
  workflow_call:
    inputs:
      runner-label:
          description: 'Optional: BH'
          required: false
          type: string
          default: 'BH'
  schedule:
    - cron: "0 */12 * * *"  # Every day at 0:00 and 12:00 UTC
    - cron: "0 8 * * 6"     # Runs at 8am UTC every Saturday

run-name: ${{ (github.event.schedule == '0 8 * * 6' || (github.event_name == 'workflow_dispatch' && inputs.run-ttnn-tests)) && '(Blackhole) Blackhole nightly tests (with ttnn)' || '(Blackhole) Blackhole nightly tests' }}  # Dynamically change name based on day

jobs:
  build-artifact:
    uses: ./.github/workflows/build-artifact.yaml
    secrets: inherit
    with:
      build-wheel: true
      version: 22.04
  bh-nightly:
    needs: build-artifact
    uses: ./.github/workflows/blackhole-nightly-tests-impl.yaml
    secrets: inherit
    with:
      docker-image: ${{ needs.build-artifact.outputs.dev-docker-image }}
      build-artifact-name: ${{ needs.build-artifact.outputs.build-artifact-name }}
      wheel-artifact-name: ${{ needs.build-artifact.outputs.wheel-artifact-name }}
  ttnn-unit-tests:
    needs: build-artifact
    if: github.event.schedule == '0 8 * * 6' || (github.event_name == 'workflow_dispatch' && inputs.run-ttnn-tests)  # Only run ttnn on the weekends or if workflow manually triggered with ttnn enabled
    secrets: inherit
    uses: ./.github/workflows/ttnn-post-commit.yaml
    with:
      arch: blackhole
      runner-label: ${{ inputs.runner-label || 'BH' }}
      docker-image: ${{ needs.build-artifact.outputs.dev-docker-image }}
      build-artifact-name: ${{ needs.build-artifact.outputs.build-artifact-name }}
      wheel-artifact-name: ${{ needs.build-artifact.outputs.wheel-artifact-name }}
