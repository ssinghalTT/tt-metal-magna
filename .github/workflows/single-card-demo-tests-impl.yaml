name: "[internal] Single-card Demo tests impl"

on:
  workflow_call:
    inputs:
      build-artifact-name:
        required: true
        type: string
      docker-image:
        required: true
        type: string
      wheel-artifact-name:
        required: true
        type: string
      arch:
        required: true
        type: string

jobs:
  single-card-demo-tests:
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          { name: "llama3", runner-label: "N300", performance: false, cmd: run_llama3_func, owner_id: U03PUAKE719}, # Miguel Tairum
          { name: "mistral7b", runner-label: "N150", performance: true, cmd: run_mistral7b_func, owner_id: U0896VBAKFC}, # Pratikkumar Prajapati
          { name: "mistral7b", runner-label: "N300", performance: true, cmd: run_mistral7b_func, owner_id: U0896VBAKFC}, # Pratikkumar Prajapati
          { name: "mistral7b", runner-label: "N300", performance: true, cmd: run_mistral7b_perf, owner_id: U0896VBAKFC}, # Pratikkumar Prajapati
          { name: "llama3", runner-label: "N300", performance: false, cmd: run_llama3_perf, owner_id: U03PUAKE719}, # Miguel Tairum
        ]
    name: ${{ matrix.test-group.name }}-${{ matrix.test-group.runner-label }}-${{ (matrix.test-group.performance && 'perf') || 'func' }}
    env:
      LOGURU_LEVEL: INFO
      LD_LIBRARY_PATH: ${{ github.workspace }}/build/lib
    runs-on:
      - ${{ matrix.test-group.runner-label }}
      - in-service
      - ${{ (matrix.test-group.runner-label == 'N300' && matrix.test-group.performance && 'bare-metal') || 'cloud-virtual-machine' }}
      - ${{ (matrix.test-group.runner-label == 'N300' && matrix.test-group.performance && 'pipeline-perf') || 'cloud-virtual-machine' }}
    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: ⬇️ Download Build
        uses: actions/download-artifact@v4
        timeout-minutes: 10
        with:
          name: ${{ inputs.build-artifact-name }}
      - name: Extract files
        run: tar -xvf ttm_any.tar
      - name: ⬇️ Download Wheel
        uses: actions/download-artifact@v4
        timeout-minutes: 10
        with:
          name: ${{ inputs.wheel-artifact-name }}
      - name: Enable Performance mode
        if: ${{ matrix.test-group.runner-label == 'N300' && matrix.test-group.performance }}
        run: sudo cpupower frequency-set -g performance
      - uses: ./.github/actions/ensure-active-weka-mount
      - name: Run demo regression tests
        uses: ./.github/actions/docker-run
        timeout-minutes: 90
        env:
          LOGURU_LEVEL: INFO
        with:
          docker_image: ${{ inputs.docker-image || 'docker-image-unresolved!' }}
          docker_password: ${{ secrets.GITHUB_TOKEN }}
          docker_opts: |
            -e TT_METAL_HOME=${{ github.workspace }}
            -e LD_LIBRARY_PATH=${{ github.workspace }}/build/lib
            -e ARCH_NAME=${{ inputs.arch }}
            -v /mnt/MLPerf:/mnt/MLPerf
            --cap-add=ALL
            --security-opt seccomp=unconfined
            --ulimit nproc=65536:65536
            --ulimit nofile=65536:65536
          install_wheel: true
          run_args: |
            source ${{ github.workspace }}/tests/scripts/single_card/run_single_card_demo_tests.sh
            ${{ matrix.test-group.cmd }}
      - name: Save environment data
        if: ${{ matrix.test-group.runner-label == 'N300' && matrix.test-group.performance && !cancelled() && matrix.test-group.name != 'whisper' }}
        uses: ./.github/actions/docker-run
        env:
          LOGURU_LEVEL: INFO
        with:
          docker_image: ${{ inputs.docker-image || 'docker-image-unresolved!' }}
          docker_password: ${{ secrets.GITHUB_TOKEN }}
          docker_opts: |
            -e TT_METAL_HOME=${{ github.workspace }}
            -e LD_LIBRARY_PATH=${{ github.workspace }}/build/lib
            -e ARCH_NAME=${{ inputs.arch }}
            -v /mnt/MLPerf:/mnt/MLPerf
          install_wheel: true
          run_args: python3 .github/scripts/data_analysis/create_benchmark_with_environment_json.py
      - name: Upload benchmark data
        if: ${{ matrix.test-group.runner-label == 'N300' && matrix.test-group.performance && !cancelled() && matrix.test-group.name != 'whisper' }}
        uses: ./.github/actions/upload-data-via-sftp
        with:
          ssh-private-key: ${{ secrets.SFTP_BENCHMARK_WRITER_KEY }}
          sftp-batchfile: .github/actions/upload-data-via-sftp/benchmark_data_batchfile.txt
          username: ${{ secrets.SFTP_BENCHMARK_WRITER_USERNAME }}
          hostname: ${{ secrets.SFTP_BENCHMARK_WRITER_HOSTNAME }}
      - uses: ./.github/actions/slack-report
        if: ${{ failure() }}
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          owner: ${{ matrix.test-group.owner_id }}
      - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
        timeout-minutes: 10
        if: ${{ !cancelled() }}
        with:
          path: generated/test_reports/
          prefix: "test_reports_"
      - name: Disable Performance mode
        if: ${{ matrix.test-group.runner-label == 'N300' && matrix.test-group.performance }}
        run: sudo cpupower frequency-set -g ondemand
