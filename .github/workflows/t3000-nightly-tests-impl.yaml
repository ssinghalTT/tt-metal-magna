name: "[internal] T3000 nightly tests impl"

on:
  workflow_call:
    inputs:
      docker-image:
        required: true
        type: string
      build-artifact-name:
        required: true
        type: string
      wheel-artifact-name:
        required: true
        type: string
      extra-tag:
        required: false
        type: string
        default: "in-service"

jobs:
  t3000-nightly-tests:
    strategy:
      fail-fast: false
      matrix:
        test-group: [
          { name: "t3k_ccl_tests", arch: wormhole_b0, cmd: pytest -n auto tests/nightly/t3000/ccl, timeout: 180, owner_id: ULMEPM2MA}, # Sean Nijjar
        ]

    name: ${{ matrix.test-group.name }}
    runs-on:
      - arch-wormhole_b0
      - config-t3000
      - pipeline-functional
      - ${{ inputs.extra-tag }}
    container:
      image: ${{ inputs.docker-image }}
      env:
        TT_METAL_HOME: /work
        PYTHONPATH: /work
        LD_LIBRARY_PATH: /work/build/lib
        ARCH_NAME: ${{ matrix.test-group.arch }}
        LOGURU_LEVEL: INFO
      volumes:
        - ${{ github.workspace }}/docker-job:/work # Subdir to workaround https://github.com/actions/runner/issues/691
        - /dev/hugepages-1G:/dev/hugepages-1G
        - /mnt/MLPerf:/mnt/MLPerf
      options: "--device /dev/tenstorrent"
    defaults:
      run:
        shell: bash
        working-directory: /work # https://github.com/actions/runner/issues/878
    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          path: docker-job # Here be dragons; keep it scoped to our desired volume, yet must be under github.workspace and be sure to clean up at the end

      - name: ⬇️ Download Build
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.build-artifact-name }}
          path: docker-job

      - name: Extract files
        run: tar -xvf ttm_any.tar

      - name: ⬇️ Download Wheel
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.wheel-artifact-name }}
          path: docker-job

      - name: Install Wheel
        run: |
          WHEEL_FILENAME=$(ls -1 *.whl)
          pip3 install $WHEEL_FILENAME

      - name: Run demo regression tests
        timeout-minutes: ${{ matrix.test-group.timeout }}
        run: |
          ${{ matrix.test-group.cmd }}
      - uses: ./.github/actions/slack-report
        if: ${{ failure() }}
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          owner: ${{ matrix.test-group.owner_id }}
      - uses: tenstorrent/tt-metal/.github/actions/upload-artifact-with-job-uuid@main
        timeout-minutes: 10
        if: ${{ !cancelled() }}
        with:
          path: |
            /work/generated/test_reports/
          prefix: "test_reports_"
      - uses: tenstorrent/tt-metal/.github/actions/cleanup@main
        if: always()
